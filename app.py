# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5.QtGui import QIcon
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt
from datetime import date
from PyQt5.QtWidgets import * 
import pickle
from DialogBox import DialogBox


# Loading the model
model = pickle.load(open('Car_Predictor.pkl', 'rb'))


class Ui_MainWindow(object):

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(598, 804)

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")


        self.image(MainWindow)
        self.labels(MainWindow)
        self.radioOptions(MainWindow)
        self.inputs(MainWindow)
        self.button(MainWindow)
        self.choiceBox(MainWindow)


        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 598, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)


    def image(self, MainWindow):
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(-90, -20, 551, 321))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("./assets/image1.png"))
        self.label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label.setObjectName("label")


    def labels(self, MainWindow):
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)

        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(50, 330, 341, 31))
        self.label_2.setFont(font)
        self.label_2.setAutoFillBackground(False)
        self.label_2.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_2.setObjectName("label_2")

        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(50, 370, 341, 31))
        self.label_3.setFont(font)
        self.label_3.setAutoFillBackground(False)
        self.label_3.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_3.setObjectName("label_3")

        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(50, 410, 341, 31))
        self.label_4.setFont(font)
        self.label_4.setAutoFillBackground(False)
        self.label_4.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_4.setObjectName("label_4")

        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(50, 450, 341, 31))
        self.label_5.setFont(font)
        self.label_5.setAutoFillBackground(False)
        self.label_5.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_5.setObjectName("label_5")

        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(50, 550, 311, 31))
        self.label_6.setFont(font)
        self.label_6.setAutoFillBackground(False)
        self.label_6.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_6.setObjectName("label_6")

        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(50, 590, 311, 31))
        self.label_7.setFont(font)
        self.label_7.setAutoFillBackground(False)
        self.label_7.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_7.setObjectName("label_7")

        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(50, 630, 311, 31))
        self.label_8.setFont(font)
        self.label_8.setAutoFillBackground(False)
        self.label_8.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_8.setObjectName("label_8")


        font.setPointSize(11)
        self.label_10 = QtWidgets.QLabel(self.centralwidget)
        self.label_10.setGeometry(QtCore.QRect(440, 750, 130, 25))
        self.label_10.setFont(font)
        self.label_10.setObjectName("label_10")


    def inputs(self, MainWindow):
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)

        self.years = QtWidgets.QLineEdit(self.centralwidget, maxLength=4)
        self.years.setGeometry(QtCore.QRect(390, 330, 181, 36))
        self.years.setFont(font)
        self.years.setObjectName("years")
        #To allow only int
        self.years.setValidator(QtGui.QIntValidator(1990, 2022))
        self.years.setAlignment(Qt.AlignHCenter)

        self.present_price = QtWidgets.QLineEdit(self.centralwidget, maxLength=4)
        self.present_price.setGeometry(QtCore.QRect(390, 370, 181, 36))
        self.present_price.setFont(font)
        self.present_price.setObjectName("present_price")
        #To allow only double
        self.present_price.setValidator(
            QtGui.QDoubleValidator(
                0.0, # bottom
                50.0, # top
                2, # decimals 
                notation=QtGui.QDoubleValidator.StandardNotation
            )
        )
        self.present_price.setAlignment(Qt.AlignHCenter)


        self.owners = QtWidgets.QLineEdit(self.centralwidget, maxLength=10)
        self.owners.setGeometry(QtCore.QRect(390, 410, 181, 36))
        self.owners.setFont(font)
        self.owners.setObjectName("owners")
        #To allow only double
        self.present_price.setValidator(
            QtGui.QDoubleValidator(
                0.0, # bottom
                1000000.0, # top
                2, # decimals 
                notation=QtGui.QDoubleValidator.StandardNotation
            )
        )
        self.owners.setAlignment(Qt.AlignHCenter)



    def radioOptions(self, MainWindow):
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)

        font = QtGui.QFont()
        font.setFamily("Roman")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        font.setKerning(True)

        self.owner_0 = QtWidgets.QRadioButton(self.centralwidget)
        self.owner_0.setGeometry(QtCore.QRect(390, 460, 95, 20))
        self.owner_0.setFont(font)
        self.owner_0.setObjectName("owner_0")

        self.owner_1 = QtWidgets.QRadioButton(self.centralwidget)
        self.owner_1.setGeometry(QtCore.QRect(390, 490, 95, 20))
        self.owner_1.setFont(font)
        self.owner_1.setObjectName("owner_1")

        self.owner_2 = QtWidgets.QRadioButton(self.centralwidget)
        self.owner_2.setGeometry(QtCore.QRect(390, 520, 95, 20))
        self.owner_2.setFont(font)
        self.owner_2.setObjectName("owner_2")


    def choiceBox(self, MainWindow):
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(11)
        font.setBold(False)

        self.fuelDct = {"Petrol" : 0, "Diesel" : 1, "CNG" : 2}
        self.fuel_type = QtWidgets.QComboBox(self.centralwidget)
        self.fuel_type.setGeometry(QtCore.QRect(385, 550, 185, 36))
        self.fuel_type.setFont(font)
        self.fuel_type.setObjectName("fuel_type")
        self.fuel_type.addItems(['Petrol', 'Diesel', 'CNG'])

        self.sellerDct = {"Dealer" : 0, "Individual" : 1}
        self.seller_type = QtWidgets.QComboBox(self.centralwidget)
        self.seller_type.setGeometry(QtCore.QRect(385, 590, 185, 36))
        self.seller_type.setFont(font)
        self.seller_type.setObjectName("seller_type")
        self.seller_type.addItems(['Dealer', 'Individual'])

        self.transmissionDct = {"Manual" : 0, "Automatic" : 1}
        self.transmission_mode = QtWidgets.QComboBox(self.centralwidget)
        self.transmission_mode.setGeometry(QtCore.QRect(385, 630, 185, 36))
        self.transmission_mode.setFont(font)
        self.transmission_mode.setObjectName("transmission_mode")
        self.transmission_mode.addItems(['Manual', 'Automatic'])


    def getInputFields(self):
        years = 1990 if not bool(self.years.text()) else int(self.years.text()) 
        present_price = 0.5 if not bool(self.present_price.text()) else float(self.present_price.text())
        kms_driven = 0.0 if not bool(self.owners.text()) else float(self.owners.text())
        # print(years, present_price, kms_driven)

        fuel_type = self.fuel_type.currentText()
        seller_type = self.seller_type.currentText()
        transmission_mode = self.transmission_mode.currentText()
        # print(fuel_type, seller_type, transmission_mode)

        radio_Ouput = self.owner_2.text() if self.owner_2.isChecked() else (self.owner_1.text() if self.owner_1.isChecked() else self.owner_0.text())
        radio_Ouput = int(radio_Ouput)
        # print(radio_Ouput)

        Fuel_Type = self.fuelDct[fuel_type]
        Seller_Type = self.sellerDct[seller_type]
        Transmission_Mode = self.transmissionDct[transmission_mode]
        queryData = [years, present_price, kms_driven, Fuel_Type, Seller_Type, Transmission_Mode, radio_Ouput]
        # print(queryData)
        # for i in queryData:
        #     print(i, type(i))
        return queryData


    def predictData(self):
        data = self.getInputFields()
        try:
            prediction = model.predict([data])
            output = round(prediction[0], 2)

            if output < 0:
                message = ("Sorry! You won't be able to sell this car...")
            else:
                message = (f"You can sell this car for ₹{str(output)} Lakhs 🙌")

        except:
            message = ("Oops🙄 Something went wrong\nPlease Try Again")

        self.openDialogBox(message)



    def button(self, MainWindow):
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(12)
        font.setBold(True)

        self.predict = QtWidgets.QPushButton(self.centralwidget)
        self.predict.setGeometry(QtCore.QRect(210, 680, 161, 41))
        self.predict.setFont(font)
        self.predict.setObjectName("predict")
        self.predict.clicked.connect(self.predictData)


    def openDialogBox(self, message):
        self.dialog = QtWidgets.QDialog()
        self.dialogBox = DialogBox()
        self.dialogBox.setupUi(self.dialog)
        self.dialogBox.ok_btn.clicked.connect(lambda:self.dialog.close())
        self.dialog.show()
        self.dialogBox.info_label.setText(message)


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Car Price Predictor"))
 
        self.label_2.setText(_translate("MainWindow", "Purchased Year"))
        self.years.setPlaceholderText(_translate("MainWindow", "Purchased Year"))
        self.years.setToolTip(_translate("MainWindow", "Enter the year the car was purchased"))

        self.label_3.setText(_translate("MainWindow", "Ex-Showroom Price (In ₹lakhs)"))
        self.present_price.setPlaceholderText(_translate("MainWindow", "Present Price"))
        self.present_price.setToolTip(_translate("MainWindow", "Enter the present price of the car"))
 
 
        self.label_4.setText(_translate("MainWindow", "Odometer Reading"))
        self.owners.setPlaceholderText(_translate("MainWindow", "Kms Driven"))
        self.owners.setToolTip(_translate("MainWindow", "Enter the kilometers driven"))
 
        self.label_5.setText(_translate("MainWindow", "No. of Owners"))
        self.owner_0.setText(_translate("MainWindow", "    0"))
        self.owner_2.setText(_translate("MainWindow", "    2"))
        self.owner_1.setText(_translate("MainWindow", "    1"))

        self.label_6.setText(_translate("MainWindow", "Fuel Type"))
        self.label_7.setText(_translate("MainWindow", "Seller Type"))
        self.label_8.setText(_translate("MainWindow", "Transmission Mode"))


        self.predict.setText(_translate("MainWindow", "Esimate Price"))
        self.label_10.setText(_translate("MainWindow", "© Adarsh-619"))



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    app_icon = QIcon("./assets/icon2.png")
    app.setWindowIcon(app_icon)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    print("App Running.....")
    sys.exit(app.exec_())
